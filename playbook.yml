---
- name: Create ec2 instance
  hosts: local
  connection: local
  vars:
    instance_type: t2.micro
    image: ami-04781752c9b20ea41
    security_group_name: SSH-HTTP
    vpc_ip: default
    vpc_subnet_id: default
    region: us-east-2
    keypair: devops_10_ubuntu


  tasks:
    - name: Create security group
      ec2_group:
        name: "{{ security_group_name }}"
        description: Webserver security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
    - name: new ec2 instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        group: "{{ security_group_name }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: 1
        user_data:
          |
          #!/bin/bash
          sudo apt update
          sudo apt install python nginx -y
          sudo service nginx start
          sudo service nginx enabled
      register: ec2
    - name: add
      lineinfile:
        path: /etc/ansible/hosts
        insertafter: '[webserver]'
        line: {{ item.public_ip}}
      with_items: "{{ ec2.instances }}"
#      local_action:
#        lineinfile:
#          path: /etc/ansible/hosts
#          regexp: "{{ item.public_ip }}"
#          insertafter= "[webserver]"
#      with_items: "{{ ec2.instances }}"
    #- name: add new instance to hosts file
     # add_host:
      #  name: "{{ item.public_ip }}"
       # groups: webservers
      #with_items: "{{ ec2.instances }}"
    - name: wait for ssh
      wait_for:
        host: "{{ item.public_ip }} "
        port: 22
        state: started
      with_items: "{{ ec2.instances }}"
    - name: wait for 120 sec
      wait_for:
        timeout: 300
      delegate_to: localhost
- name: copy new index.html
  hosts: webserver
  remote_user: ubuntu
  vars:
    ansible_ssh_private_key_file: ./devops_10.ppk
  become: yes
  tasks:
    - name: copy index.html
      copy:
        src: ./index.html
        dest: /var/www/html
    - name: restart nginx
      service:
        name: nginx
        state: restarted
